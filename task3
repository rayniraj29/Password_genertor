import secrets
import string
import sys
import random

def generate_password(length: int) -> str:
    """
    Generate a strong password of given length.
    Ensures at least 1 lowercase, uppercase, digit, and symbol.
    Uses `secrets` for cryptographic randomness.
    """
  if length < 4:
        raise ValueError("Password length must be at least 4 characters.")

    # Character sets
    lower = string.ascii_lowercase
    upper = string.ascii_uppercase
    digits = string.digits
    symbols = string.punctuation

    # Guarantee one from each category
    password_chars = [
        secrets.choice(lower),
        secrets.choice(upper),
        secrets.choice(digits),
        secrets.choice(symbols)
    ]
    all_chars = lower + upper + digits + symbols

    # Fill the rest
    password_chars += [secrets.choice(all_chars) for _ in range(length - 4)]

    # Shuffle to avoid predictable order
    random.SystemRandom().shuffle(password_chars)
    return ''.join(password_chars)

def main():
    try:
        length = int(input("Enter desired password length (minimum 4): "))
    except ValueError:
        print("Invalid inputâ€”please enter a number.")
        sys.exit(1)

    try:
        pwd = generate_password(length)
    except ValueError as ve:
        print(ve)
        sys.exit(1)

    print("\nGenerated password:\n" + pwd)

if __name__ == "__main__":
    main()
